{"remainingRequest":"/Users/starlight947/Desktop/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/starlight947/Desktop/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/starlight947/Desktop/gateway/node_modules/angular-router-loader/src/index.js!/Users/starlight947/Desktop/gateway/node_modules/tslint-loader/index.js!/Users/starlight947/Desktop/gateway/src/main/webapp/app/core/auth/auth-jwt.service.ts","dependencies":[{"path":"/Users/starlight947/Desktop/gateway/src/main/webapp/app/core/auth/auth-jwt.service.ts","mtime":1550329812587},{"path":"/Users/starlight947/Desktop/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/starlight947/Desktop/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/starlight947/Desktop/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/starlight947/Desktop/gateway/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/starlight947/Desktop/gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/starlight947/Desktop/gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar AuthServerProvider = /** @class */ (function () {\n    function AuthServerProvider(http) {\n        this.http = http;\n    }\n    AuthServerProvider.prototype.getToken = function () {\n        return null;\n    };\n    AuthServerProvider.prototype.login = function (credentials) {\n        var data = {\n            username: credentials.username,\n            password: credentials.password,\n            rememberMe: credentials.rememberMe\n        };\n        return this.http.post(app_constants_1.SERVER_API_URL + 'auth/login', data, {});\n    };\n    AuthServerProvider.prototype.loginWithToken = function (jwt, rememberMe) {\n        if (jwt) {\n            this.storeAuthenticationToken(jwt, rememberMe);\n            return Promise.resolve(jwt);\n        }\n        else {\n            return Promise.reject('auth-jwt-service Promise reject'); // Put appropriate error message here\n        }\n    };\n    AuthServerProvider.prototype.storeAuthenticationToken = function (jwt, rememberMe) { };\n    AuthServerProvider.prototype.logout = function () {\n        return this.http.post(app_constants_1.SERVER_API_URL + 'auth/logout', null);\n    };\n    var _a;\n    AuthServerProvider = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\n    ], AuthServerProvider);\n    return AuthServerProvider;\n}());\nexports.AuthServerProvider = AuthServerProvider;\n",{"version":3,"file":"/Users/starlight947/Desktop/gateway/src/main/webapp/app/core/auth/auth-jwt.service.ts","sourceRoot":"","sources":["/Users/starlight947/Desktop/gateway/node_modules/angular-router-loader/src/index.js!/Users/starlight947/Desktop/gateway/node_modules/tslint-loader/index.js!/Users/starlight947/Desktop/gateway/src/main/webapp/app/core/auth/auth-jwt.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAkD;AAIlD,mDAAmD;AAGnD;IACI,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,qCAAQ,GAAR;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAK,GAAL,UAAM,WAAW;QACb,IAAM,IAAI,GAAG;YACT,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,UAAU,EAAE,WAAW,CAAC,UAAU;SACrC,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,2CAAc,GAAd,UAAe,GAAG,EAAE,UAAU;QAC1B,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YAC/C,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC/B;aAAM;YACH,OAAO,OAAO,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC,CAAC,qCAAqC;SAClG;IACL,CAAC;IAED,qDAAwB,GAAxB,UAAyB,GAAG,EAAE,UAAU,IAAG,CAAC;IAE5C,mCAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;;IA7BQ,kBAAkB;QAD9B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEL,iBAAU,oBAAV,iBAAU;OAD3B,kBAAkB,CA8B9B;IAAD,yBAAC;CAAA,AA9BD,IA8BC;AA9BY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthServerProvider {\n    constructor(private http: HttpClient) {}\n\n    getToken() {\n        return null;\n    }\n\n    login(credentials): Observable<any> {\n        const data = {\n            username: credentials.username,\n            password: credentials.password,\n            rememberMe: credentials.rememberMe\n        };\n        return this.http.post(SERVER_API_URL + 'auth/login', data, {});\n    }\n\n    loginWithToken(jwt, rememberMe) {\n        if (jwt) {\n            this.storeAuthenticationToken(jwt, rememberMe);\n            return Promise.resolve(jwt);\n        } else {\n            return Promise.reject('auth-jwt-service Promise reject'); // Put appropriate error message here\n        }\n    }\n\n    storeAuthenticationToken(jwt, rememberMe) {}\n\n    logout(): Observable<any> {\n        return this.http.post(SERVER_API_URL + 'auth/logout', null);\n    }\n}\n"]}]}