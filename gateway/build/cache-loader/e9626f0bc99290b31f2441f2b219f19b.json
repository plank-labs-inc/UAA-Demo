{"remainingRequest":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/angular-router-loader/src/index.js!/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/tslint-loader/index.js!/Users/starlight947/Desktop/UAA-Demo/gateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","dependencies":[{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","mtime":1550329811342},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar operators_1 = require(\"rxjs/operators\");\nvar router_1 = require(\"@angular/router\");\nvar login_modal_service_1 = require(\"app/core/login/login-modal.service\");\nvar account_service_1 = require(\"app/core/auth/account.service\");\nvar login_service_1 = require(\"app/core/login/login.service\");\nvar AuthExpiredInterceptor = /** @class */ (function () {\n    function AuthExpiredInterceptor(loginModalService, accountService, router, loginService) {\n        this.loginModalService = loginModalService;\n        this.accountService = accountService;\n        this.router = router;\n        this.loginService = loginService;\n    }\n    AuthExpiredInterceptor.prototype.intercept = function (request, next) {\n        var _this = this;\n        return next.handle(request).pipe(operators_1.tap(function (event) { }, function (err) {\n            if (err instanceof http_1.HttpErrorResponse) {\n                if (err.status === 401) {\n                    if (_this.accountService.isAuthenticated()) {\n                        _this.accountService.authenticate(null);\n                        _this.loginModalService.open();\n                    }\n                    else {\n                        _this.loginService.logout();\n                        _this.router.navigate(['/']);\n                    }\n                }\n            }\n        }));\n    };\n    var _a, _b, _c, _d;\n    AuthExpiredInterceptor = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof login_modal_service_1.LoginModalService !== \"undefined\" && login_modal_service_1.LoginModalService) === \"function\" ? _a : Object, typeof (_b = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _b : Object, typeof (_c = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _c : Object, typeof (_d = typeof login_service_1.LoginService !== \"undefined\" && login_service_1.LoginService) === \"function\" ? _d : Object])\n    ], AuthExpiredInterceptor);\n    return AuthExpiredInterceptor;\n}());\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\n",{"version":3,"file":"/Users/starlight947/Desktop/UAA-Demo/gateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","sourceRoot":"","sources":["/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/angular-router-loader/src/index.js!/Users/starlight947/Desktop/UAA-Demo/gateway/node_modules/tslint-loader/index.js!/Users/starlight947/Desktop/UAA-Demo/gateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA+G;AAE/G,4CAAqC;AACrC,0CAAyC;AAEzC,0EAAuE;AACvE,iEAA+D;AAC/D,8DAA4D;AAG5D;IACI,gCACY,iBAAoC,EACpC,cAA8B,EAC9B,MAAc,EACd,YAA0B;QAH1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;IACnC,CAAC;IAEJ,0CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAmBC;QAlBG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,eAAG,CACC,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,IAAI,GAAG,YAAY,wBAAiB,EAAE;gBAClC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;wBACvC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACvC,KAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;qBACjC;yBAAM;wBACH,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;wBAC3B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC/B;iBACJ;aACJ;QACL,CAAC,CACJ,CACJ,CAAC;IACN,CAAC;;IA3BQ,sBAAsB;QADlC,iBAAU,EAAE;qEAGsB,uCAAiB,oBAAjB,uCAAiB,oDACpB,gCAAc,oBAAd,gCAAc,oDACtB,eAAM,oBAAN,eAAM,oDACA,4BAAY,oBAAZ,4BAAY;OAL7B,sBAAsB,CA4BlC;IAAD,6BAAC;CAAA,AA5BD,IA4BC;AA5BY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { LoginModalService } from 'app/core/login/login-modal.service';\nimport { AccountService } from 'app/core/auth/account.service';\nimport { LoginService } from 'app/core/login/login.service';\n\n@Injectable()\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n    constructor(\n        private loginModalService: LoginModalService,\n        private accountService: AccountService,\n        private router: Router,\n        private loginService: LoginService\n    ) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            tap(\n                (event: HttpEvent<any>) => {},\n                (err: any) => {\n                    if (err instanceof HttpErrorResponse) {\n                        if (err.status === 401) {\n                            if (this.accountService.isAuthenticated()) {\n                                this.accountService.authenticate(null);\n                                this.loginModalService.open();\n                            } else {\n                                this.loginService.logout();\n                                this.router.navigate(['/']);\n                            }\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n"]}]}